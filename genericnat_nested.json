{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates a NAT host in a Public Subnet",
  "Parameters": {
    "NATS3BucketName": {
      "Description": "The name of the existing S3 bucket where you stored the NAT host files",
      "Type": "String",
      "Default": "eyamrog-toolbox",
      "AllowedPattern": "[-.a-z0-9]*",
      "ConstraintDescription": "Bucket names can contain lowercase letters, numbers, hyphens and periods (.)"
    },
    "NATInstanceType": {
      "Description": "NAT host EC2 instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "t2.xlarge",
        "t2.2xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m4.16xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c5.large",
        "c5.xlarge",
        "c5.2xlarge",
        "c5.4xlarge",
        "c5.9xlarge",
        "c5.18xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "r4.large",
        "r4.xlarge",
        "r4.2xlarge",
        "r4.4xlarge",
        "r4.8xlarge",
        "r4.16xlarge",
        "x1.16xlarge",
        "x1.32xlarge",
        "x1e.32xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "i3.large",
        "i3.xlarge",
        "i3.2xlarge",
        "i3.4xlarge",
        "i3.8xlarge",
        "i3.16xlarge",
        "f1.2xlarge",
        "f1.16xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "g3.4xlarge",
        "g3.8xlarge",
        "g3.16xlarge",
        "p2.xlarge",
        "p2.8xlarge",
        "p2.16xlarge",
        "p3.2xlarge",
        "p3.8xlarge",
        "p3.16xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type."
    },
    "NATKeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the NAT instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
    },
    "VirtualPrivateCloud": {
      "Description": "ID of the Virtual Private Cloud",
      "Type": "AWS::EC2::VPC::Id"
    },
    "NATSubnet": {
      "Description": "ID of the Public Subnet where you want to create the NAT host",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "CidrBlock": {
      "Description": "CIDR Block of the VPC",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "10.0.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x."
    },
    "PrivateRouteTable1": {
      "Description": "ID of the Private Route Table",
      "Type": "String"
    }
  },
  "Mappings": {
    "AWSInstanceType2NATArch": {
      "t2.nano": {
        "Arch": "NATHVM64"
      },
      "t2.micro": {
        "Arch": "NATHVM64"
      },
      "t2.small": {
        "Arch": "NATHVM64"
      },
      "t2.medium": {
        "Arch": "NATHVM64"
      },
      "t2.large": {
        "Arch": "NATHVM64"
      },
      "t2.xlarge": {
        "Arch": "NATHVM64"
      },
      "t2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "m3.medium": {
        "Arch": "NATHVM64"
      },
      "m3.large": {
        "Arch": "NATHVM64"
      },
      "m3.xlarge": {
        "Arch": "NATHVM64"
      },
      "m3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.large": {
        "Arch": "NATHVM64"
      },
      "m4.xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.2xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.4xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.10xlarge": {
        "Arch": "NATHVM64"
      },
      "m4.16xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.large": {
        "Arch": "NATHVM64"
      },
      "c3.xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "c3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.large": {
        "Arch": "NATHVM64"
      },
      "c4.xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.4xlarge": {
        "Arch": "NATHVM64"
      },
      "c4.8xlarge": {
        "Arch": "NATHVM64"
      },
      "c5.large": {
        "Arch": "NATHVM64"
      },
      "c5.xlarge": {
        "Arch": "NATHVM64"
      },
      "c5.2xlarge": {
        "Arch": "NATHVM64"
      },
      "c5.4xlarge": {
        "Arch": "NATHVM64"
      },
      "c5.9xlarge": {
        "Arch": "NATHVM64"
      },
      "c5.18xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.large": {
        "Arch": "NATHVM64"
      },
      "r3.xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "r3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "r4.large": {
        "Arch": "NATHVM64"
      },
      "r4.xlarge": {
        "Arch": "NATHVM64"
      },
      "r4.2xlarge": {
        "Arch": "NATHVM64"
      },
      "r4.4xlarge": {
        "Arch": "NATHVM64"
      },
      "r4.8xlarge": {
        "Arch": "NATHVM64"
      },
      "r4.16xlarge": {
        "Arch": "NATHVM64"
      },
      "x1.16xlarge": {
        "Arch": "NATHVM64"
      },
      "x1.32xlarge": {
        "Arch": "NATHVM64"
      },
      "x1e.32xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.4xlarge": {
        "Arch": "NATHVM64"
      },
      "d2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.4xlarge": {
        "Arch": "NATHVM64"
      },
      "i2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "i3.large": {
        "Arch": "NATHVM64"
      },
      "i3.xlarge": {
        "Arch": "NATHVM64"
      },
      "i3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "i3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "i3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "i3.16xlarge": {
        "Arch": "NATHVM64"
      },
      "f1.2xlarge": {
        "Arch": "NATHVM64"
      },
      "f1.16xlarge": {
        "Arch": "NATHVM64"
      },
      "g2.2xlarge": {
        "Arch": "NATHVM64"
      },
      "g2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "g3.4xlarge": {
        "Arch": "NATHVM64"
      },
      "g3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "g3.16xlarge": {
        "Arch": "NATHVM64"
      },
      "p2.xlarge": {
        "Arch": "NATHVM64"
      },
      "p2.8xlarge": {
        "Arch": "NATHVM64"
      },
      "p2.16xlarge": {
        "Arch": "NATHVM64"
      },
      "p3.2xlarge": {
        "Arch": "NATHVM64"
      },
      "p3.8xlarge": {
        "Arch": "NATHVM64"
      },
      "p3.16xlarge": {
        "Arch": "NATHVM64"
      }
    }
  },
  "Resources": {
    "NATSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable access to the NAT host",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": {
              "Ref": "CidrBlock"
            }
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": {
              "Ref": "CidrBlock"
            }
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",
            "CidrIp": {
              "Ref": "CidrBlock"
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "9418",
            "ToPort": "9418",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": {
              "Ref": "CidrBlock"
            }
          },
          {
            "IpProtocol": "udp",
            "FromPort": "123",
            "ToPort": "123",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "-1",
            "ToPort": "-1",            
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "SG-NAT"
          }
        ]
      }
    },
    "NATInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "NATInstanceRole"
          }
        ]
      }
    },
    "NATInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "instance-policy",
            "PolicyDocument": {
              "Statement": [
                {
                  "Sid": "AdminPolicy",
                  "Effect": "Allow",
                  "Action": "*",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "NATAMIInfo": {
      "Type": "Custom::NATAMIInfo",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "NATAMIInfoFunction",
            "Arn"
          ]
        },
        "Region": {
          "Ref": "AWS::Region"
        },
        "Architecture": {
          "Fn::FindInMap": [
            "AWSInstanceType2NATArch",
            {
              "Ref": "NATInstanceType"
            },
            "Arch"
          ]
        }
      }
    },
    "NATAMIInfoFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "NATS3BucketName"
          },
          "S3Key": "natamilookup.zip"
        },
        "Handler": {
          "Fn::Join": [
            "",
            [
              "natamilookup",
              ".handler"
            ]
          ]
        },
        "Role": {
          "Fn::GetAtt":
          [
            "LambdaExecutionRole",
            "Arn"
          ]
        },        
        "Runtime": "nodejs6.10",
        "Timeout": "30"
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                "Effect": "Allow",
                "Action": [
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "arn:aws:logs:*:*:*"
                },
                {
                 "Effect": "Allow",
                 "Action": [
                   "ec2:DescribeImages"
                   ],
                 "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "NATHost": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "SourceDestCheck": "false",
        "ImageId": {
          "Fn::GetAtt": [
            "NATAMIInfo",
            "Id"
          ]
        },
        "InstanceType": {
          "Ref": "NATInstanceType"
        },
        "KeyName": {
          "Ref": "NATKeyName"
        },
        "IamInstanceProfile": {
          "Ref": "NATInstanceProfile"
        },
        "SecurityGroupIds": [
          {
            "Ref": "NATSecurityGroup"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": {
              "VolumeSize": 8
            }
          }
        ],
        "SubnetId": {
          "Ref": "NATSubnet"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "NAT host"
          }
        ]
      }
    },
    "NATIPAddress": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": {
          "Ref": "NATHost"
        }
      }
    },
    "PrivateRoute1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PrivateRouteTable1"
        },
        "InstanceId": {
          "Ref": "NATHost"
        }
      }
    }
  },
  "Outputs": {
    "NATIPAddress": {
      "Description": "IP Address of the NAT host",
      "Value": {
        "Ref": "NATIPAddress"
      }
    },
    "NATAMIID" : {
      "Description": "The latest Amazon EC2 instance AMI ID",
      "Value" : {
        "Fn::GetAtt": [
          "NATAMIInfo",
          "Id"
        ]
      }
    }
  }
}