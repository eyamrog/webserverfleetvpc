{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Creates a VPC with three Public Subnets and three Private Subnets",
  "Conditions" : {
    "IsNVirginia": {"Fn::Equals": [{"Ref": "AWS::Region"}, "us-east-1"]}
  },
  "Resources": {
    "VirtualPrivateCloud": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "false",
        "Tags": [
          {
            "Key": "Name",
            "Value": "Virtual Private Cloud"
          }
        ]
      }
    },
    "PublicSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]        
        },
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet A"
          }
        ]
      }
    },
    "PublicSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]        
        },
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet B"
          }
        ]
      }
    },
    "PublicSubnetC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.3.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]        
        },
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Public Subnet C"
          }
        ]
      }
    },
    "PrivateSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.11.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]        
        },
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet A"
          }
        ]
      }
    },
    "PrivateSubnetB": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.12.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]        
        },
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet B"
          }
        ]
      }
    },
    "PrivateSubnetC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.13.0/24",
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]        
        },
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Private Subnet C"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Internet Gateway"
          }
        ]
      }
    },
    "VPCGwAttach1": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        }
      }
    },
    "PublicRoute1": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "VPCGwAttach1",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable1"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetRouteTableAssociationA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetA"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable1"
        }
      }
    },
    "PublicSubnetRouteTableAssociationB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetB"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable1"
        }
      }
    },
    "PublicSubnetRouteTableAssociationC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetC"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable1"
        }
      }
    },
    "PrivateRouteTable1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        }
      }
    },
    "PrivateSubnetRouteTableAssociationA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetA"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTable1"
        }
      }
    },
    "PrivateSubnetRouteTableAssociationB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetB"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTable1"
        }
      }
    },
    "PrivateSubnetRouteTableAssociationC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetC"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTable1"
        }
      }
    },
    "DHCPOptions": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName": {
          "Fn::If": [
            "IsNVirginia",
            "ec2.internal",
            {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::Region"
                  },
                  ".compute.internal"
                ]
              ]
            }
          ]
        },
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "DHCPAssoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        },
        "DhcpOptionsId": {
          "Ref": "DHCPOptions"
        }
      }
    },
    "NetworkACL": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VirtualPrivateCloud"
        }
      }
    },
    "ACL1": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": "true",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "NetworkACL"
        }
      }
    },
    "ACL2": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "NetworkACL"
        }
      }
    },
    "SubnetACLAssoc1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "PublicSubnetA"
        }
      }
    },
    "SubnetACLAssoc2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "PublicSubnetB"
        }
      }
    },
    "SubnetACLAssoc3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "PublicSubnetC"
        }
      }
    },
    "SubnetACLAssoc11": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "PrivateSubnetA"
        }
      }
    },
    "SubnetACLAssoc12": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "PrivateSubnetB"
        }
      }
    },
    "SubnetACLAssoc13": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkACL"
        },
        "SubnetId": {
          "Ref": "PrivateSubnetC"
        }
      }
    }
  },
  "Outputs": {
    "Region": {
      "Description": "AWS Region",
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "CidrBlock": {
      "Description": "CIDR Block of the VPC",
      "Value": {
        "Fn::GetAtt": [
          "VirtualPrivateCloud",
          "CidrBlock"
        ]
      }
    },
    "VirtualPrivateCloud": {
      "Description": "Virtual Private Cloud",
      "Value": {
        "Ref": "VirtualPrivateCloud"
      }
    },
    "PublicSubnetA": {
      "Description": "Public Subnet A",
      "Value": {
        "Ref": "PublicSubnetA"
      }
    },
    "PublicSubnetB": {
      "Description": "Public Subnet B",
      "Value": {
        "Ref": "PublicSubnetB"
      }
    },
    "PublicSubnetC": {
      "Description": "Public Subnet C",
      "Value": {
        "Ref": "PublicSubnetC"
      }
    },
    "PrivateSubnetA": {
      "Description": "Private Subnet A",
      "Value": {
        "Ref": "PrivateSubnetA"
      }
    },
    "PrivateSubnetB": {
      "Description": "Private Subnet B",
      "Value": {
        "Ref": "PrivateSubnetB"
      }
    },
    "PrivateSubnetC": {
      "Description": "Private Subnet C",
      "Value": {
        "Ref": "PrivateSubnetC"
      }
    },
    "PublicRouteTable1": {
      "Description": "Public Route Table 1",
      "Value": {
        "Ref": "PublicRouteTable1"
      }
    },
    "PrivateRouteTable1": {
      "Description": "Private Route Table 1",
      "Value": {
        "Ref": "PrivateRouteTable1"
      }
    }
  }
}
